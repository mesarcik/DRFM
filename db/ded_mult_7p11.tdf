--alt_ded_mult_y CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" device_family="MAX 10" dsp_block_balancing="Auto" extra_latency=0 input_reg_a="UNREGISTERED" input_reg_b="UNREGISTERED" output_reg="UNREGISTERED" pipeline_reg="UNREGISTERED" representation_a="SIGNED" representation_b="SIGNED" sub_dedicated_multiplier_circuitry="YES" width_a=16 width_b=17 dataa datab result
--VERSION_BEGIN 16.1 cbx_alt_ded_mult_y 2016:10:24:15:04:16:SJ cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_padd 2016:10:24:15:04:16:SJ cbx_parallel_add 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ cbx_util_mgl 2016:10:24:15:04:16:SJ  VERSION_END


-- Copyright (C) 2016  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Intel and sold by Intel or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.


FUNCTION fiftyfivenm_mac_mult (aclr, clk, dataa[dataa_width-1..0], datab[datab_width-1..0], ena, signa, signb)
WITH ( dataa_clock, dataa_width, datab_clock, datab_width, signa_clock, signb_clock)
RETURNS ( dataout[dataa_width+datab_width-1..0]);
FUNCTION fiftyfivenm_mac_out (aclr, clk, dataa[dataa_width-1..0], ena)
WITH ( dataa_width = 0, output_clock)
RETURNS ( dataout[dataa_width-1..0]);
FUNCTION dffpipe_a3c (d[32..0])
RETURNS ( q[32..0]);

--synthesis_resources = dsp_9bit 2 
SUBDESIGN ded_mult_7p11
( 
	dataa[15..0]	:	input;
	datab[16..0]	:	input;
	result[32..0]	:	output;
) 
VARIABLE 
	mac_mult2 : fiftyfivenm_mac_mult
		WITH (
			dataa_width = 16,
			datab_width = 17
		);
	mac_out3 : fiftyfivenm_mac_out
		WITH (
			dataa_width = 33
		);
	pre_result : dffpipe_a3c;
	aclr[3..0]	: NODE;
	x_dataa[15..0]	: WIRE;
	x_datab[16..0]	: WIRE;
	x_signa[0..0]	: WIRE;
	x_signb[0..0]	: WIRE;

BEGIN 
	mac_mult2.aclr = aclr[0..0];
	mac_mult2.dataa[] = ( x_dataa[]);
	mac_mult2.datab[] = ( x_datab[]);
	mac_mult2.signa = x_signa[];
	mac_mult2.signb = x_signb[];
	mac_out3.dataa[] = ( mac_mult2.dataout[32..0]);
	pre_result.d[32..0] = mac_out3.dataout[32..0];
	aclr[] = GND;
	result[] = pre_result.q[];
	x_dataa[] = dataa[];
	x_datab[] = datab[];
	x_signa[] = B"1";
	x_signb[] = B"1";
END;
--VALID FILE
